// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/jonathanmoreiraa/2cents/internal/api/handler"
	"github.com/jonathanmoreiraa/2cents/internal/api/route"
	"github.com/jonathanmoreiraa/2cents/internal/config"
	"github.com/jonathanmoreiraa/2cents/internal/infra/database"
	"github.com/jonathanmoreiraa/2cents/internal/infra/repository"
	"github.com/jonathanmoreiraa/2cents/internal/usecase/category"
	"github.com/jonathanmoreiraa/2cents/internal/usecase/expense"
	"github.com/jonathanmoreiraa/2cents/internal/usecase/revenue"
	"github.com/jonathanmoreiraa/2cents/internal/usecase/saving"
	"github.com/jonathanmoreiraa/2cents/internal/usecase/user"
)

// Injectors from wire.go:

func InitializeAPI(cfg config.Config) (*route.ServerHTTP, error) {
	databaseProvider, err := database.NewMySqlDatabase(cfg)
	if err != nil {
		return nil, err
	}
	userRepository := repository.NewUserRepository(databaseProvider)
	userUseCase := user.NewUserUseCase(userRepository)
	userHandler := handler.NewUserHandler(userUseCase)
	revenueRepository := repository.NewRevenueRepository(databaseProvider)
	revenueUseCase := revenue.NewRevenueUseCase(revenueRepository)
	revenueHandler := handler.NewRevenueHandler(revenueUseCase)
	expenseRepository := repository.NewExpenseRepository(databaseProvider)
	expenseUseCase := expense.NewExpenseUseCase(expenseRepository)
	categoryRepository := repository.NewCategoryRepository(databaseProvider)
	categoryUseCase := category.NewCategoryUseCase(categoryRepository)
	expenseHandler := handler.NewExpenseHandler(expenseUseCase, categoryUseCase)
	categoryHandler := handler.NewCategoryHandler(categoryUseCase, expenseUseCase)
	savingRepository := repository.NewSavingRepository(databaseProvider)
	savingUseCase := saving.NewSavingUseCase(savingRepository)
	savingHandler := handler.NewSavingHandler(savingUseCase, expenseHandler)
	handlerGroup := NewHandlerGroup(userHandler, revenueHandler, expenseHandler, categoryHandler, savingHandler)
	serverHTTP := route.NewServerHTTP(handlerGroup)
	return serverHTTP, nil
}

// wire.go:

func NewHandlerGroup(
	userHandler *handler.UserHandler,
	revenueHandler *handler.RevenueHandler,
	expenseHandler *handler.ExpenseHandler,
	categoryHandler *handler.CategoryHandler,
	savingHandler *handler.SavingHandler,
) route.HandlerGroup {
	return route.HandlerGroup{
		UserHandler:     userHandler,
		RevenueHandler:  revenueHandler,
		ExpenseHandler:  expenseHandler,
		CategoryHandler: categoryHandler,
		SavingHandler:   savingHandler,
	}
}
